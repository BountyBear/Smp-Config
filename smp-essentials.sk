# Config File For Smps
# Made By BountyBear


command /smp [<text>] [<text>] [<text>]:
	permission: op
	trigger:
		if arg-1 is not set:
			send "&f Correct Usage /smp [Pearls/Shields/Pots/Tier2Pots/Single Mace/EnchantLimiter] [On/OFF]"
		if arg-1 is set:
			# PEARLS
			if arg-1 is "Pearls":
				if arg-2 is set:
					if arg-2 is "ON":
						set {pearl} to true
						broadcast "&aEnder pearls enabled!"
					if arg-2 is "OFF":
						set {pearl} to false
						broadcast "&cEnder pearls disabled!"
			# SHIELDS
			if arg-1 is "Shields":
				if arg-2 is set:
					if arg-2 is "ON":
						set {shield} to true
						broadcast "&aShields enabled!"
					if arg-2 is "OFF":
						set {shield} to false
						broadcast "&cShields disabled!"
			# Potion Brewing
			if arg-1 is "Potions":
				if arg-2 is set:
					if arg-2 is "ON":
						set {pots} to true
						broadcast "&aPotions enabled!"
					if arg-2 is "OFF":
						set {pots} to false
						broadcast "&cPotions disabled!"
			# Tier 2 Pots
			if arg-1 is "Tier2Pots":
				if arg-2 is set:
					if arg-2 is "On":
						set {t2pots} to true
						broadcast "&aTier 2 pots enabled!"
					if arg-2 is "OFF":
						set {t2pots} to false
						broadcast "&cTier 2 pots disabled!"
			# Single Mace
			if arg-1 is "SingleMace":
				if arg-2 is set:
					if arg-2 is "ON":
						set {macelimit} to true
						set {crafted} to false
						broadcast "&aOnly 1 Mace Craftable"
					if arg-2 is "OFF":
						set {macelimit} to false
						set {crafted} to false
						broadcast "&cInfnite Mace enabled!"
			# Pvp
			if arg-1 is "Pvp":
				if arg-2 is set:
					if arg-2 is "ON":
						set {PVP} to true
						broadcast "&aPvp enabled!"
					if arg-2 is "OFF":
						set {PVP} to false
						broadcast "&cPvp disabled!"
			# Enchant limiter
			if arg-1 is "EnchantLimiter":
				if arg-2 is set:
					if arg-2 is "Protection":
						if arg-3 is set:
							set {prot} to arg-3 parsed as number
							broadcast "&aMax Protection is Now &b%{prot}%!"
					if arg-2 is "Sharpness":
						if arg-3 is set:
							set {sharp} to arg-3 parsed as number
							broadcast "&aMax Sharpness is Now &b%{sharp}%!"
					if arg-2 is "NoLimits":
						delete {sharp}
						delete {prot}
						broadcast "&cNo Sharpness and Protection Limit!"
					if arg-2 is "NoEnchants":
						if arg-3 is set:
							if arg-3 is "ON":
								broadcast "&cEnchants Have been disable!"
								set {NoEnchants} to false
							if arg-3 is "OFF":
								broadcast "&aEnchants have been enabled"
								set {NoEnchants} to true
			# No netherite
			if arg-1 is "Netherite":
				if arg-2 is set:
					if arg-2 is "ON":
						set {neth} to true
						broadcast "&aNetherite enabled!"
					if arg-2 is "OFF":
						set {neth} to false
						broadcast "&cNetherite disabled!"
			# ITEM CAP PART
			if arg-1 is "itemCap":
				if arg-2 is set:
					if arg-2 is "GoldenApple":
						if arg-3 is set:
							set {_i} to arg-3 parsed as number
							set {capgaps} to {_i}
					if arg-2 is "GoldenCarrots":
						if arg-3 is set:
							set {_i} to arg-3 parsed as number
							set {capcarrot} to {_i}
					if arg-2 is "XpBottles":
						if arg-3 is set:
							set {_i} to arg-3 parsed as number
							set {capbottles} to {_i}
					if arg-2 is "EnderPearl":
						if arg-3 is set:
							set {_i} to arg-3 parsed as number
							set {cappearl} to {_i}

on damage:
	if victim is player:
		if attacker is player:
			if {PVP} is false:
				cancel event

on tab complete for "/smp":
	set tab completions for position 1 to "Pearls" and "Shields" and "Potions" and "Tier2Pots" and "SingleMace" and "Pvp" and "EnchantLimiter" and "Netherite" and "itemCap"
	if tab arg-1 = "Pearls" or "Shields" or "Potions" or "Tier2Pots" or "SingleMace" or "Pvp" or "Netherite":
		set tab completions for position 2 to "ON" and "OFF"
	if tab arg-1 = "EnchantLimiter":
		set tab completions for position 2 to "Protection" and "Sharpness" and "NoLimits" and "NoEnchants"
	if tab arg-2 = "NoEnchants":
		set tab completions for position 3 to "ON" and "OFF"
	if tab arg-2 = "Protection":
		set tab completions for position 3 to "1" and "2" and "3" and "4"
	if tab arg-2 = "Sharpness":
		set tab completions for position 3 to "1" and "2" and "3" and "4" and "5"
	if tab arg-1 is "itemCap":
		set tab completions for position 2 to "GoldenApple" and "EnderPearl" and "XpBottles" and "GoldenCarrots"
		set tab completions for position 3 to "number"

every 1 second:
	loop all players:
		loop all items in loop-player's inventory:
			if {prot} is "1":
				if loop-item is enchanted with protection 2 or protection 3 or protection 4:
					enchant loop-item with protection 1
			if {prot} is "2":
				if loop-item is enchanted with protection 3 or protection 4:
					enchant loop-item with protection 2
			if {prot} is "3":
				if loop-item is enchanted with protection 4:
					enchant loop-item with protection 3
			if {sharp} is "1":
				if loop-item is enchanted with sharpness 2 or sharpness 3 or sharpness 4 or sharpness 5:
					enchant loop-item with sharpness 1
			if {sharp} is "2":
				if loop-item is enchanted with sharpness 2 or sharpness 3 or sharpness 4 or sharpness 5:
					enchant loop-item with sharpness 2
			if {sharp} is "3":
				if loop-item is enchanted with sharpness 3 or sharpness 4 or sharpness 5:
					enchant loop-item with sharpness 3
			if {sharp} is "4":
				if loop-item is enchanted with sharpness 4 or sharpness 5:
					enchant loop-item with sharpness 4
			if {noenchants} is true:
				disenchant loop-item
			if {neth} is false:
				if loop-item is netherite ingot:
					loop 64 times:
						remove 1 netherite ingot from loop-player's inventory
						wait 1 tick



on craft:
	if event-item is mace:
		if {macelimit} is true:
			if {crafted} is false:
				set {crafted} to true
				broadcast "&%player% &b Has Crafted &5The Only Mace"
			else:
				cancel event
	if event-item is netherite ingot:
		if {neth} is false:
			cancel event

on shoot:
	if event-projectile is ender pearl:
		if {pearl} is false:
			cancel event

on inventory click:
	if type of player's current inventory is a brewing stand inventory:
		if {t2pots} is false:
			if any:
				click action is lmb
				click action is rmb
			then:
				if player's cursor slot is glowstone dust:
					cancel event
					send "&cNo Tier 2 Pots"
			if click action is swap offhand:
				if player's offhand item is glowstone dust:
					cancel event
			if click action is number key:
				if player's inventory.getItem(event.getHotbarButton()) is glowstone dust:
					cancel event
	if type of player's current inventory is a brewing stand inventory:
		if {t2pots} is false:
			if any:
				click action is shift+lmb
				click action is shift+rmb
			then:
				if event-item is glowstone dust:
					cancel event

on inventory drag:
	set {_slots::*} to event.getRawSlots()
	loop {_slots::*}:
		set {_slot} to "%loop-value%"
		replace all "[" with "" in {_slot}
		replace all "]" with "" in {_slot}
		set {_list::*} to split {_slot} at ", "

	loop {_list::*}:
		set {_num} to loop-value parsed as integer
		if type of player's current inventory is a brewing stand inventory:
			if past event-item is glowstone dust:
				cancel event


on crafter craft:
	if recipe result is mace:
		if {macelimit} is true:
			cancel event
	if recipe result is netherite ingot:
		if {neth} is false:
			cancel event

on craft:
	if event-item is shield:
		if {shield} is false:
			cancel event

on right click on brewing stand:
	if {pots} is false:
		cancel event

on pickup:
	if event-item is shield:
		if {Shield} is false:
			cancel event
	if event-item is potion:
		if {pots} is false:
			cancel event

on right click:
	if player's tool is shield:
		if {shield} is false:
			cancel event

## ITEM CAP PART
### DO NOT TOUCH

options:
	capGoldenApples: {capgaps}
	capGoldenCarrots: {capcarrot}
	capEnderPearls: {cappearl}
	capCobwebs: {capwebs}
	capxpbottles: {capbottles}

variables:
	{itemCapCooldown::%player%} = 0

on player move:
	if {itemCapCooldown::%player%} is greater than now:
		stop

	set {itemCapCooldown::%player%} to now + 5 seconds
	
	set {_goldenApples} to the amount of golden apple in player's inventory
	if {_goldenApples} > {capgaps}:
		set {_extra} to {_goldenApples} - {capgaps}
		loop {_extra} times:
			remove 1 golden apple from player's inventory
			drop 1 golden apple at location of player
		send "&cYou can't have more than {capgaps} Golden Apples! Dropping the extras." to player

	set {_goldenCarrots} to the amount of golden carrot in player's inventory
	if {_goldenCarrots} > {apcarrot}:
		set {_extra} to {_goldenCarrots} - {apcarrot}
		loop {_extra} times:
			remove 1 golden carrot from player's inventory
			drop 1 golden carrot at location of player
		send "&cYou can't have more than {apcarrot} Golden Carrots! Dropping the extras." to player

	set {_enderPearls} to the amount of ender pearl in player's inventory
	if {_enderPearls} > {cappearl}:
		set {_extra} to {_enderPearls} - {cappearl}
		loop {_extra} times:
			remove 1 ender pearl from player's inventory
			drop 1 ender pearl at location of player
		send "&cYou can't have more than {cappearl} Ender Pearls! Dropping the extras." to player

	set {_cobwebs} to the amount of cobweb in player's inventory
	if {_cobwebs} > {capCobwebs}:
		set {_extra} to {_cobwebs} - {capCobwebs}
		loop {_extra} times:
			remove 1 cobweb from player's inventory
			drop 1 cobweb at location of player
		send "&cYou can't have more than {capCobwebs} Cobwebs! Dropping the extras." to player
	
	set {_bottles} to the amount of experience bottles in player's inventory
	if {_bottles} > {capbottles}:
		set {_extra} to {_bottles} - {capbottles}
		loop {_extra} times:
			remove 1 experience bottle from player's inventory
			drop 1 experience bottle at location of player
		send "&cYou can't have more than {capbottles} experience bottles! Dropping the extras." to player
